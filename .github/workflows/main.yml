
name: Build and Release
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: modify
        run: |
          cd tailscale
          sed -i '/hi.ServerName != m.hostname/,+2d' cmd/derper/cert.go
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        id:  docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: richpeople/ip_derper:latest
      - name: Compress derper directory after building
        run: |
          docker run -d --name derp ${{ steps.docker_build.outputs.digest }}
          docker cp derp:/app/derper ./output
          tar -czvf tailscale_derp_$(uname -m).tar.gz ./output
          docker rm -f derp
          rm -r ./output
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.Developer_Token }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.Developer_Token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tailscale_derp_$(uname -m).tar.gz
          asset_name: tailscale_derp_$(uname -m).tar.gz
          asset_content_type: application/gzip
